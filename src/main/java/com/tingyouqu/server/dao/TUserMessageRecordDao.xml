<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tingyouqu.server.dao.TUserMessageRecordDao">
  <resultMap id="BaseResultMap" type="com.tingyouqu.server.dao.model.TUserMessageRecord">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="from_user_id" jdbcType="BIGINT" property="fromUserId" />
    <result column="to_user_id" jdbcType="BIGINT" property="toUserId" />
    <result column="message_id" jdbcType="VARCHAR" property="messageId" />
    <result column="message_timestamp" jdbcType="BIGINT" property="messageTimestamp" />
    <result column="ext" jdbcType="VARCHAR" property="ext" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="ack_state" jdbcType="INTEGER" property="ackState" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, from_user_id, to_user_id, message_id, message_timestamp, ext, create_time, update_time, 
    ack_state
  </sql>
  <select id="selectByExample" parameterType="com.tingyouqu.server.dao.model.TUserMessageRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user_message_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user_message_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_user_message_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.tingyouqu.server.dao.model.TUserMessageRecordExample">
    delete from t_user_message_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.tingyouqu.server.dao.model.TUserMessageRecord" useGeneratedKeys="true">
    insert into t_user_message_record (from_user_id, to_user_id, message_id, 
      message_timestamp, ext, create_time, 
      update_time, ack_state)
    values (#{fromUserId,jdbcType=BIGINT}, #{toUserId,jdbcType=BIGINT}, #{messageId,jdbcType=VARCHAR}, 
      #{messageTimestamp,jdbcType=BIGINT}, #{ext,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{ackState,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.tingyouqu.server.dao.model.TUserMessageRecord" useGeneratedKeys="true">
    insert into t_user_message_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fromUserId != null">
        from_user_id,
      </if>
      <if test="toUserId != null">
        to_user_id,
      </if>
      <if test="messageId != null">
        message_id,
      </if>
      <if test="messageTimestamp != null">
        message_timestamp,
      </if>
      <if test="ext != null">
        ext,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="ackState != null">
        ack_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fromUserId != null">
        #{fromUserId,jdbcType=BIGINT},
      </if>
      <if test="toUserId != null">
        #{toUserId,jdbcType=BIGINT},
      </if>
      <if test="messageId != null">
        #{messageId,jdbcType=VARCHAR},
      </if>
      <if test="messageTimestamp != null">
        #{messageTimestamp,jdbcType=BIGINT},
      </if>
      <if test="ext != null">
        #{ext,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ackState != null">
        #{ackState,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tingyouqu.server.dao.model.TUserMessageRecordExample" resultType="java.lang.Long">
    select count(*) from t_user_message_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_user_message_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.fromUserId != null">
        from_user_id = #{record.fromUserId,jdbcType=BIGINT},
      </if>
      <if test="record.toUserId != null">
        to_user_id = #{record.toUserId,jdbcType=BIGINT},
      </if>
      <if test="record.messageId != null">
        message_id = #{record.messageId,jdbcType=VARCHAR},
      </if>
      <if test="record.messageTimestamp != null">
        message_timestamp = #{record.messageTimestamp,jdbcType=BIGINT},
      </if>
      <if test="record.ext != null">
        ext = #{record.ext,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ackState != null">
        ack_state = #{record.ackState,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_user_message_record
    set id = #{record.id,jdbcType=BIGINT},
      from_user_id = #{record.fromUserId,jdbcType=BIGINT},
      to_user_id = #{record.toUserId,jdbcType=BIGINT},
      message_id = #{record.messageId,jdbcType=VARCHAR},
      message_timestamp = #{record.messageTimestamp,jdbcType=BIGINT},
      ext = #{record.ext,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      ack_state = #{record.ackState,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tingyouqu.server.dao.model.TUserMessageRecord">
    update t_user_message_record
    <set>
      <if test="fromUserId != null">
        from_user_id = #{fromUserId,jdbcType=BIGINT},
      </if>
      <if test="toUserId != null">
        to_user_id = #{toUserId,jdbcType=BIGINT},
      </if>
      <if test="messageId != null">
        message_id = #{messageId,jdbcType=VARCHAR},
      </if>
      <if test="messageTimestamp != null">
        message_timestamp = #{messageTimestamp,jdbcType=BIGINT},
      </if>
      <if test="ext != null">
        ext = #{ext,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ackState != null">
        ack_state = #{ackState,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tingyouqu.server.dao.model.TUserMessageRecord">
    update t_user_message_record
    set from_user_id = #{fromUserId,jdbcType=BIGINT},
      to_user_id = #{toUserId,jdbcType=BIGINT},
      message_id = #{messageId,jdbcType=VARCHAR},
      message_timestamp = #{messageTimestamp,jdbcType=BIGINT},
      ext = #{ext,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      ack_state = #{ackState,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>